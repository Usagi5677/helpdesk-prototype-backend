//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userId String [unique, not null]
  rcno Int [not null]
  fullName String [not null]
  email String [not null]
  notifications Notification [not null]
  informations Information [not null]
  roles UserRole [not null]
  userGroupUsers UserGroupUser [not null]
  ticketsCreated Ticket [not null]
  ticketAssignments TicketAssignment [not null]
  ticketFollowings TicketFollowing [not null]
  checklistCompletions ChecklistItem [not null]
  ticketComments TicketComment [not null]
  ticketAttachments TicketAttachment [not null]
}

Table Notification {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  userId Int [not null]
  user User [not null]
  body String
  link String
  readAt DateTime
}

Table Information {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  createdById Int [not null]
  createdBy User [not null]
  mode String [not null]
  title String [not null]
  body String [not null]
}

Table UserRole {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userId Int [not null]
  user User [not null]
  role Role [not null]

  indexes {
    (userId, role) [unique]
  }
}

Table UserGroup {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [unique, not null]
  mode String [not null, default: 'Private']
  createdById Int [not null]
  userGroupUsers UserGroupUser [not null]
}

Table UserGroupUser {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userId Int [not null]
  user User [not null]
  userGroupId Int [not null]
  userGroup UserGroup [not null]

  indexes {
    (userId, userGroupId) [unique]
  }
}

Table Ticket {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  createdById Int [not null]
  createdBy User [not null]
  status TicketStatus [not null, default: 'Pending']
  title String [not null]
  body String
  rating Int
  feedback String
  priority Priority
  ticketCategories TicketCategory [not null]
  ticketAssignments TicketAssignment [not null]
  checklistItems ChecklistItem [not null]
  ticketFollowings TicketFollowing [not null]
  comments TicketComment [not null]
  attachments TicketAttachment [not null]
}

Table Category {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  name String [not null]
  active Boolean [not null, default: true]
  tickets TicketCategory [not null]
}

Table TicketCategory {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  ticketId Int [not null]
  ticket Ticket [not null]
  categoryId Int [not null]
  category Category [not null]
}

Table TicketAssignment {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userId Int [not null]
  user User [not null]
  ticketId Int [not null]
  ticket Ticket [not null]
  isOwner Boolean [not null]

  indexes {
    (userId, ticketId) [unique]
  }
}

Table ChecklistItem {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  ticketId Int [not null]
  ticket Ticket [not null]
  description String [not null]
  completedById Int
  completedBy User
  completedAt DateTime
}

Table TicketFollowing {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userId Int [not null]
  user User [not null]
  ticketId Int [not null]
  ticket Ticket [not null]

  indexes {
    (userId, ticketId) [unique]
  }
}

Table TicketComment {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userId Int [not null]
  user User [not null]
  ticketId Int [not null]
  ticket Ticket [not null]
  body String [not null]
  mode String [not null, default: 'Public']
}

Table TicketAttachment {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  userId Int [not null]
  user User [not null]
  ticketId Int [not null]
  ticket Ticket [not null]
  description String [not null]
  mimeType String
  originalName String
  sharepointFileName String
  mode String [not null, default: 'Public']
}

Table TicketStatusHistory {
  id Int [pk, increment]
  createdAt DateTime [default: `now()`, not null]
  status TicketStatus [not null]
  count Int [not null]

  indexes {
    (createdAt, status) [unique]
  }
}

Enum Role {
  Agent
  Admin
}

Enum TicketStatus {
  Pending
  Open
  Closed
  Solved
  Reopened
}

Enum Priority {
  High
  Normal
  Low
}

Ref: Notification.userId > User.id

Ref: Information.createdById > User.id

Ref: UserRole.userId > User.id

Ref: UserGroupUser.userId > User.id

Ref: UserGroupUser.userGroupId > UserGroup.id

Ref: Ticket.createdById > User.id

Ref: TicketCategory.ticketId > Ticket.id

Ref: TicketCategory.categoryId > Category.id

Ref: TicketAssignment.userId > User.id

Ref: TicketAssignment.ticketId > Ticket.id

Ref: ChecklistItem.ticketId > Ticket.id

Ref: ChecklistItem.completedById > User.id

Ref: TicketFollowing.userId > User.id

Ref: TicketFollowing.ticketId > Ticket.id

Ref: TicketComment.userId > User.id

Ref: TicketComment.ticketId > Ticket.id

Ref: TicketAttachment.userId > User.id

Ref: TicketAttachment.ticketId > Ticket.id