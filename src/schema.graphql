# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Date custom scalar type"""
scalar Date

type Mutation {
  addToUserGroup(userGroupId: Int!, userId: Int!): String!
  changeUserGroupMode(id: Int!, mode: String!): String!
  changeUserGroupName(id: Int!, name: String!): String!
  createUserGroup(mode: String!, name: String!): String!
  deleteUserGroup(id: Int!): String!
  flushRedis: String!
  removeFromUserGroup(id: Int!): String!
}

type PaginatedUserGroup {
  edges: [UserGroupEdge!]
  pageInfo: UserGroupPageInfo
}

type Query {
  me: User!
  redisGet(key: String!): String
  redisKeys: [String!]!
  searchUser(query: String!): [User!]!
  userGroup(id: Int!): UserGroup!
  userGroups(
    """Paginate after opaque cursor"""
    after: String

    """Paginate before opaque cursor"""
    before: String

    """Paginate first"""
    first: Int

    """Paginate last"""
    last: Int
    name: Int
  ): PaginatedUserGroup!
}

type User {
  """Identifies the date and time when the object was created."""
  createdAt: Date!
  fullName: String!
  id: Int!
  rcno: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
  userId: String!
}

type UserGroup {
  """Identifies the date and time when the object was created."""
  createdAt: Date!
  createdBy: User!
  id: Int!
  name: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
  users: [User!]!
}

type UserGroupEdge {
  cursor: String
  node: UserGroup
}

type UserGroupPageInfo {
  count: Int!
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}
